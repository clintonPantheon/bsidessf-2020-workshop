apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-same-namespace
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-config
  namespace: default
type: Opaque
stringData:
  config.yaml: |-
    url: http://proxy-with-auth.squid:3128
    username: foo
    password: bar
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: default
  labels:
    app: server
spec:
  replicas: 1
  selector:
    matchLabels:
       app: server
  template:
    metadata:
     labels:
       app: server
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - image: nginx
        name: server
        imagePullPolicy: Always
        volumeMounts:
          - {name: config, mountPath: /my-config}
      volumes:
        - {name: config, secret: {secretName: secret-config}}
---
apiVersion: v1
kind: Service
metadata:
  name: server
  namespace: default
spec:
  selector:
    app: server
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bad-server
  namespace: default
  labels:
    app: bad-server
spec:
  replicas: 1
  selector:
    matchLabels:
       app: bad-server
  template:
    metadata:
     labels:
       app: bad-server
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - image: nginx
        name: bad-server
        imagePullPolicy: Always
        volumeMounts:
          - {name: config, mountPath: /my-config}
      volumes:
        - {name: config, secret: {secretName: secret-config}}
---
apiVersion: v1
kind: Service
metadata:
  name: bad-server
  namespace: default
spec:
  selector:
    app: bad-server
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
